<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kido&#39;s Blog</title>
  <subtitle>RCE &amp; Coding</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.kidoplay.com/"/>
  <updated>2016-10-10T06:49:10.913Z</updated>
  <id>http://blog.kidoplay.com/</id>
  
  <author>
    <name>Kido</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MarkdownPad 2 Pro 注册机</title>
    <link href="http://blog.kidoplay.com/2016/10/10/MarkdownPad-2-Pro-%E7%A0%B4%E8%A7%A3%E8%AE%B0%E5%BD%95/"/>
    <id>http://blog.kidoplay.com/2016/10/10/MarkdownPad-2-Pro-破解记录/</id>
    <published>2016-10-09T21:44:06.000Z</published>
    <updated>2016-10-10T06:49:10.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x0-前言"><a href="#0x0-前言" class="headerlink" title="0x0 前言"></a>0x0 前言</h2><p>为了现在这个破博客，找了一天的win下可视化MD编辑器，终于在知乎提示下找到一个看起来不错的，也就是MarkdownPad。</p>
<p>去官网看了一下，有两个版本。</p>
<p>免费版和收费版相比，没有自动保存，最多只能打开4个文档，而且限制了视图方式等等。</p>
<p>那就开动一下，搞掉他。</p>
<h2 id="0x1-基础分析"><a href="#0x1-基础分析" class="headerlink" title="0x1 基础分析"></a>0x1 基础分析</h2><p>首先到软件目录</p>
<p>明显的C#程序</p>
<p><img src="http://i.imgur.com/umlBhNP.png" alt=""></p>
<p>那接下来就容易了，</p>
<p>Reflector打开分析一下把</p>
<p><img src="http://i.imgur.com/Cra4rxG.png" alt=""></p>
<p>无壳无混淆。</p>
<h2 id="0x2-定位注册算法"><a href="#0x2-定位注册算法" class="headerlink" title="0x2 定位注册算法"></a>0x2 定位注册算法</h2><p>定位 MarkdownPad2.Licensing</p>
<p>定位 LicenseEngine.VerifyLicense</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">VerifyLicense</span>(<span class="params"><span class="keyword">string</span> licenseKey, <span class="keyword">string</span> email</span>)</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(licenseKey) || <span class="keyword">string</span>.IsNullOrEmpty(email))</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>.License = <span class="keyword">this</span>.Decrypt(licenseKey);</div><div class="line">        <span class="keyword">this</span>.LicenseProcessed = <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (FormatException exception)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//...忽略掉</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">bool</span> flag = <span class="keyword">this</span>.License.Email.Equals(email, StringComparison.OrdinalIgnoreCase);</div><div class="line">    <span class="keyword">bool</span> flag2 = <span class="keyword">this</span>.License.Product == <span class="string">"MarkdownPad2"</span>;</div><div class="line">    <span class="keyword">return</span> (flag &amp;&amp; flag2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>解密licenseKey到一个结构体 License</p>
<p>然后比较 License.Product 是否为 “MarkdownPad2”</p>
<p>以及比较 License.Email 是否等于 输入的邮箱地址</p>
<p>细节在 this.Decrypt 里</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> License <span class="title">Decrypt</span>(<span class="params"><span class="keyword">string</span> payload</span>)</span></div><div class="line">&#123;</div><div class="line">    RSA rSA = CryptoKey.FromPublicKey(<span class="string">"-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqYO2D1DzVA3Q4JXtt0GK\r\nPKzrA1uu8LKU48f/IRI2vH+I81IwIPGQErDT4SNTjSyLIzYAcJnSUpLbUxj2OhFc\r\nrSRK/9e7PffJtus9h/ph8Tma5G4e2f7prNxSBTRqiUghB4ZCPJs2NzTA9Q4Rqqe+\r\n38/2ESGU1G/vOHW71XXKoQkLK8PbU8eRWlCybn5ZElsrCJOlZRdvcmoc/n7IyeBc\r\n2KJyl3BWhkRLcBDV2YAM1VtU0+jw1aCXltTOoVKFamIqcblYt1a9oJbv4+mPcBnJ\r\ny4XwuWSTgdfcLu3e1hLPFpBh9aQsxmqPn2OuxQqfggvLeStwazwNCiXJbSgE6XEr\r\npQIDAQAB\r\n-----END PUBLIC KEY-----"</span>, <span class="string">"2QJmLPD5ktxIrFkr"</span>).GetRSA();</div><div class="line">    <span class="keyword">byte</span>[] msg = Convert.FromBase64String(payload);</div><div class="line">    <span class="keyword">byte</span>[] bytes = rSA.PublicDecrypt(msg, RSA.Padding.PKCS1);</div><div class="line">    <span class="keyword">string</span> str = Encoding.Default.GetString(bytes);</div><div class="line">    IRestResponse response = <span class="keyword">new</span> RestResponse();</div><div class="line">    response.Content = str;</div><div class="line">    License license = <span class="keyword">new</span> JsonDeserializer().Deserialize&lt;License&gt;(response);</div><div class="line">    rSA.Dispose();</div><div class="line">    <span class="keyword">return</span> license;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简单的RSA，</p>
<p>利用的是Openssl.Net的库</p>
<p>对 CryptoKey.FromPublicKey 进行分析发现</p>
<p><img src="http://i.imgur.com/62dhlKJ.png" alt=""></p>
<p>也就是说，程序有两套解密方案</p>
<p>分析定位到 StartupHelper.Check 时确认了这一想法</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> StartupResult <span class="title">Check</span>(<span class="params"><span class="keyword">string</span> key, <span class="keyword">string</span> email</span>)</span></div><div class="line">&#123;</div><div class="line">    Mod mod = <span class="keyword">new</span> Mod();</div><div class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        flag = mod.Verify(key, email);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception)</div><div class="line">    &#123;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (flag)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>._name = mod.Args.Name;</div><div class="line">        <span class="keyword">this</span>.IsProcessed = <span class="literal">true</span>;</div><div class="line">        <span class="keyword">return</span> StartupResult.Mod;</div><div class="line">    &#125;</div><div class="line">    LicenseEngine engine = <span class="keyword">new</span> LicenseEngine();</div><div class="line">    <span class="keyword">if</span> (engine.VerifyLicense(key, email))</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>._name = engine.License.Name;</div><div class="line">        <span class="keyword">this</span>.IsProcessed = <span class="literal">true</span>;</div><div class="line">        <span class="keyword">return</span> StartupResult.Oem;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> StartupResult.None;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>利用 mod.Verify 进行第一次认证，如果成功，就成功了</p>
<p>如果不成功就用 LicenseEngine 进行第二次认证</p>
<p>因为 LicenseEngine 是主程序里的模块</p>
<p>而 mod 是 Markdown.Async 中的模块</p>
<p><del>考虑了一下就去patch Markdown.Async</del></p>
<p><del>## 0x3 替换原程序公钥并写注册机</del></p>
<h2 id="0x3-书写注册机"><a href="#0x3-书写注册机" class="headerlink" title="0x3 书写注册机"></a>0x3 书写注册机</h2><p><del>替换了一原本的公钥字符串到我自己用openssl工具生成的公钥</del></p>
<p>百度搜索到了私钥</p>
<p>接下来写Keygen</p>
<p>关键代码:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">License</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">string</span> _Product;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">string</span> _Name;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _LicenseTypeId;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">string</span> _Email;</div><div class="line">    <span class="keyword">private</span> DateTime _CreationDate;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> DateTime CreationDate</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">get</span>&#123; <span class="keyword">return</span> _CreationDate; &#125;</div><div class="line">        <span class="keyword">set</span>&#123; _CreationDate = <span class="keyword">value</span>; &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Email</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">get</span>&#123; <span class="keyword">return</span> _Email; &#125;</div><div class="line">        <span class="keyword">set</span>&#123; _Email = <span class="keyword">value</span>; &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> LicenseTypeId</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">get</span>&#123; <span class="keyword">return</span> _LicenseTypeId; &#125;</div><div class="line">        <span class="keyword">set</span>&#123; _LicenseTypeId = <span class="keyword">value</span>; &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">get</span>&#123; <span class="keyword">return</span> _Name; &#125;</div><div class="line">        <span class="keyword">set</span>&#123; _Name = <span class="keyword">value</span>; &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Product</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">get</span>&#123; <span class="keyword">return</span> _Product; &#125;</div><div class="line">        <span class="keyword">set</span>&#123; _Product = <span class="keyword">value</span>; &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">RSA rSA = CryptoKey.FromPrivateKey(newprikey, passcode).GetRSA();</div><div class="line">License newLicense = <span class="keyword">new</span> License();</div><div class="line">newLicense.Product = <span class="string">"MarkdownPad2"</span>;</div><div class="line">newLicense.Name = username.Text;</div><div class="line">newLicense.Email = email.Text;</div><div class="line">newLicense.CreationDate = DateTime.Now;</div><div class="line">newLicense.LicenseTypeId = <span class="number">1</span>;</div><div class="line"><span class="keyword">string</span> encoded = <span class="keyword">new</span> JsonSerializer().Serialize(newLicense);</div><div class="line"><span class="keyword">byte</span>[] encoded_bytes = Encoding.Default.GetBytes(encoded);</div><div class="line"><span class="keyword">byte</span>[] encrypted_bytes = rSA.PrivateEncrypt(encoded_bytes, RSA.Padding.PKCS1);</div><div class="line"><span class="keyword">string</span> encrypted = Convert.ToBase64String(encrypted_bytes);</div><div class="line">regkey.Text = encrypted;</div></pre></td></tr></table></figure>
<h2 id="0x4-后记"><a href="#0x4-后记" class="headerlink" title="0x4 后记"></a>0x4 后记</h2><p>当然，我现在就是在很愉快的用 MarkdownPad2 Pro 版本在写这篇博客， LOL。</p>
<p>值得一提的是，这款软件对win10的兼容不大好，如果要在win10下使用， 需要自己去更新一下支持库</p>
<p>链接：<a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="external">http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a></p>
<h2 id="0x5-后后记"><a href="#0x5-后后记" class="headerlink" title="0x5 后后记"></a>0x5 后后记</h2><p>逛百度的时候发现 MarkdownPad2 的私钥泄漏了</p>
<p>hhhh</p>
<p>于是就有了不需要patch，直接就可以用的注册机</p>
<p>存活期应该蛮长的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x0-前言&quot;&gt;&lt;a href=&quot;#0x0-前言&quot; class=&quot;headerlink&quot; title=&quot;0x0 前言&quot;&gt;&lt;/a&gt;0x0 前言&lt;/h2&gt;&lt;p&gt;为了现在这个破博客，找了一天的win下可视化MD编辑器，终于在知乎提示下找到一个看起来不错的，也就是Mark
    
    </summary>
    
    
      <category term="CSharp" scheme="http://blog.kidoplay.com/tags/CSharp/"/>
    
      <category term="RCE" scheme="http://blog.kidoplay.com/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>Highlight-Js 指定代码高亮</title>
    <link href="http://blog.kidoplay.com/2016/10/10/Highlight-Js-%E6%8C%87%E5%AE%9A%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE/"/>
    <id>http://blog.kidoplay.com/2016/10/10/Highlight-Js-指定代码高亮/</id>
    <published>2016-10-09T16:26:56.000Z</published>
    <updated>2016-10-09T17:17:27.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Highlight-js-指定代码高亮"><a href="#Highlight-js-指定代码高亮" class="headerlink" title="Highlight.js 指定代码高亮"></a>Highlight.js 指定代码高亮</h1><h2 id="0x0-前言"><a href="#0x0-前言" class="headerlink" title="0x0 前言"></a>0x0 前言</h2><p>最近刚刚换到hexo, 发现页面载入效率不理想, 于是寻遍各种优化方法。<br><a href="https://hexo.io/news/" target="_blank" rel="external">官网</a> 提示了一句</p>
<blockquote>
<p>Lazy load language files of highlight.js<br>highlight.js is slow. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>
<p>Auto detect must be disabled.<br>You have to specify language in code block.<br>You can set auto detect disabled in _config.yml.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">highlight:</div><div class="line">  auto_detect: false</div></pre></td></tr></table></figure>
</blockquote>
<p>&gt;</p>
<a id="more"></a>
<p>于是照做，但是有些记不得具体应该用什么标识符, 就在此记录一下自己可能会用到的</p>
<table>
<thead>
<tr>
<th>Language</th>
<th style="text-align:center">Aliases</th>
</tr>
</thead>
<tbody>
<tr>
<td>ARM assembler</td>
<td style="text-align:center">armasm, arm</td>
</tr>
<tr>
<td>ActionScript</td>
<td style="text-align:center">actionscript, as</td>
</tr>
<tr>
<td>Apache</td>
<td style="text-align:center">apache, apacheconf</td>
</tr>
<tr>
<td>AppleScript</td>
<td style="text-align:center">applescript, osascript</td>
</tr>
<tr>
<td>AutoHotkey</td>
<td style="text-align:center">autohotkey</td>
</tr>
<tr>
<td>AutoIt</td>
<td style="text-align:center">autoit</td>
</tr>
<tr>
<td>Bash</td>
<td style="text-align:center">bash, sh, zsh</td>
</tr>
<tr>
<td>Basic</td>
<td style="text-align:center">basic</td>
</tr>
<tr>
<td>C#</td>
<td style="text-align:center">cs, csharp</td>
</tr>
<tr>
<td>C++</td>
<td style="text-align:center">cpp, c, cc, h, c++, h++, hpp</td>
</tr>
<tr>
<td>CMake</td>
<td style="text-align:center">cmake, cmake.in</td>
</tr>
<tr>
<td>CSS</td>
<td style="text-align:center">css</td>
</tr>
<tr>
<td>CoffeeScript</td>
<td style="text-align:center">coffeescript, coffee, cson, iced</td>
</tr>
<tr>
<td>DNS Zone file</td>
<td style="text-align:center">dns, zone, bind</td>
</tr>
<tr>
<td>DOS</td>
<td style="text-align:center">dos, bat, cmd</td>
</tr>
<tr>
<td>Dart</td>
<td style="text-align:center">dart</td>
</tr>
<tr>
<td>Delphi</td>
<td style="text-align:center">delphi, dpr, dfm, pas, pascal, freepascal,lazarus,lpr, lfm</td>
</tr>
<tr>
<td>Django</td>
<td style="text-align:center">django, jinja</td>
</tr>
<tr>
<td>Dockerfile</td>
<td style="text-align:center">dockerfile, docker</td>
</tr>
<tr>
<td>Dust</td>
<td style="text-align:center">dust, dst</td>
</tr>
<tr>
<td>Erlang</td>
<td style="text-align:center">erlang, erl</td>
</tr>
<tr>
<td>Excel</td>
<td style="text-align:center">excel, xls, xlsx</td>
</tr>
<tr>
<td>F#</td>
<td style="text-align:center">fsharp, fs</td>
</tr>
<tr>
<td>Fortran</td>
<td style="text-align:center">fortran, f90, f95</td>
</tr>
<tr>
<td>Go</td>
<td style="text-align:center">go, golang</td>
</tr>
<tr>
<td>Gradle</td>
<td style="text-align:center">gradle</td>
</tr>
<tr>
<td>Groovy</td>
<td style="text-align:center">groovy</td>
</tr>
<tr>
<td>HTML, XML</td>
<td style="text-align:center">xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist</td>
</tr>
<tr>
<td>HTTP</td>
<td style="text-align:center">http, https</td>
</tr>
<tr>
<td>Haskell</td>
<td style="text-align:center">haskell, hs</td>
</tr>
<tr>
<td>Ini</td>
<td style="text-align:center">ini</td>
</tr>
<tr>
<td>JSON</td>
<td style="text-align:center">json</td>
</tr>
<tr>
<td>Java</td>
<td style="text-align:center">java, jsp</td>
</tr>
<tr>
<td>JavaScript</td>
<td style="text-align:center">javascript, js, jsx</td>
</tr>
<tr>
<td>Lisp</td>
<td style="text-align:center">lisp</td>
</tr>
<tr>
<td>Lua</td>
<td style="text-align:center">lua</td>
</tr>
<tr>
<td>Makefile</td>
<td style="text-align:center">makefile, mk, mak</td>
</tr>
<tr>
<td>Markdown</td>
<td style="text-align:center">markdown, md, mkdown, mkd</td>
</tr>
<tr>
<td>Mathematica</td>
<td style="text-align:center">mathematica, mma</td>
</tr>
<tr>
<td>Matlab</td>
<td style="text-align:center">matlab</td>
</tr>
<tr>
<td>Moonscript</td>
<td style="text-align:center">moonscript, moon</td>
</tr>
<tr>
<td>NSIS</td>
<td style="text-align:center">nsis</td>
</tr>
<tr>
<td>Nginx</td>
<td style="text-align:center">nginx, nginxconf</td>
</tr>
<tr>
<td>Objective C</td>
<td style="text-align:center">objectivec, mm, objc, obj-c</td>
</tr>
<tr>
<td>Oxygene</td>
<td style="text-align:center">oxygene</td>
</tr>
<tr>
<td>PHP</td>
<td style="text-align:center">php, php3, php4, php5, php6</td>
</tr>
<tr>
<td>Python</td>
<td style="text-align:center">python, py, gyp</td>
</tr>
<tr>
<td>Python profiler results</td>
<td style="text-align:center">profile</td>
</tr>
<tr>
<td>QML</td>
<td style="text-align:center">qml</td>
</tr>
<tr>
<td>Ruby</td>
<td style="text-align:center">ruby, rb, gemspec, podspec, thor, irb</td>
</tr>
<tr>
<td>Rust</td>
<td style="text-align:center">rust, rs</td>
</tr>
<tr>
<td>SQL</td>
<td style="text-align:center">sql</td>
</tr>
<tr>
<td>Scala</td>
<td style="text-align:center">scala</td>
</tr>
<tr>
<td>Smali</td>
<td style="text-align:center">smali</td>
</tr>
<tr>
<td>Swift</td>
<td style="text-align:center">swift</td>
</tr>
<tr>
<td>TypeScript</td>
<td style="text-align:center">typescript, ts</td>
</tr>
<tr>
<td>VB.Net</td>
<td style="text-align:center">vbnet, vb</td>
</tr>
<tr>
<td>VBScript</td>
<td style="text-align:center">vbscript, vbs</td>
</tr>
<tr>
<td>Vim Script</td>
<td style="text-align:center">vim</td>
</tr>
<tr>
<td>x86 Assembly</td>
<td style="text-align:center">x86asm</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Highlight-js-指定代码高亮&quot;&gt;&lt;a href=&quot;#Highlight-js-指定代码高亮&quot; class=&quot;headerlink&quot; title=&quot;Highlight.js 指定代码高亮&quot;&gt;&lt;/a&gt;Highlight.js 指定代码高亮&lt;/h1&gt;&lt;h2 id=&quot;0x0-前言&quot;&gt;&lt;a href=&quot;#0x0-前言&quot; class=&quot;headerlink&quot; title=&quot;0x0 前言&quot;&gt;&lt;/a&gt;0x0 前言&lt;/h2&gt;&lt;p&gt;最近刚刚换到hexo, 发现页面载入效率不理想, 于是寻遍各种优化方法。&lt;br&gt;&lt;a href=&quot;https://hexo.io/news/&quot;&gt;官网&lt;/a&gt; 提示了一句&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lazy load language files of highlight.js&lt;br&gt;highlight.js is slow. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:&lt;/p&gt;
&lt;p&gt;Auto detect must be disabled.&lt;br&gt;You have to specify language in code block.&lt;br&gt;You can set auto detect disabled in _config.yml.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;highlight:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  auto_detect: false&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://blog.kidoplay.com/categories/Blog/"/>
    
    
      <category term="Blog" scheme="http://blog.kidoplay.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>C# 汉字转拼音</title>
    <link href="http://blog.kidoplay.com/2016/10/09/C-%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/"/>
    <id>http://blog.kidoplay.com/2016/10/09/C-汉字转拼音/</id>
    <published>2016-10-09T11:15:23.000Z</published>
    <updated>2016-10-09T17:15:13.322Z</updated>
    
    <content type="html"><![CDATA[<p>首先引用一下微软的库<br>Microsoft.International.Converters.PinYinConverter<br><a id="more"></a><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> Microsoft.International.Converters.PinYinConverter;</div><div class="line"></div><div class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> 拼音首字母(<span class="keyword">string</span> str)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">string</span> r = <span class="keyword">string</span>.Empty;</div><div class="line">            <span class="keyword">if</span> (str == <span class="literal">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">foreach</span> (<span class="keyword">char</span> obj <span class="keyword">in</span> str)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">try</span></div><div class="line">                &#123;</div><div class="line">                    ChineseChar cChar = <span class="keyword">new</span> ChineseChar(obj);</div><div class="line">                    <span class="keyword">string</span> t = cChar.Pinyins[<span class="number">0</span>].ToString();</div><div class="line">                    r += t.Substring(<span class="number">0</span>, <span class="number">1</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">catch</span></div><div class="line">                &#123;</div><div class="line">                    r += obj.ToString();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> r;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> 拼音全拼(<span class="keyword">string</span> str)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">string</span> r = <span class="keyword">string</span>.Empty;</div><div class="line">            <span class="keyword">if</span> (str == <span class="literal">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">foreach</span> (<span class="keyword">char</span> obj <span class="keyword">in</span> str)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">try</span></div><div class="line">                &#123;</div><div class="line">                    ChineseChar chineseChar = <span class="keyword">new</span> ChineseChar(obj);</div><div class="line">                    <span class="keyword">string</span> t = chineseChar.Pinyins[<span class="number">0</span>].ToString();</div><div class="line">                    r += t.Substring(<span class="number">0</span>, t.Length - <span class="number">1</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">catch</span></div><div class="line">                &#123;</div><div class="line">                    r += obj.ToString();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> r;</div></pre></td></tr></table></figure></p>
<p>但是这种方法有多音字的问题<br>尚未解决</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先引用一下微软的库&lt;br&gt;Microsoft.International.Converters.PinYinConverter&lt;br&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://blog.kidoplay.com/categories/Coding/"/>
    
    
      <category term="CSharp" scheme="http://blog.kidoplay.com/tags/CSharp/"/>
    
      <category term="Coding" scheme="http://blog.kidoplay.com/tags/Coding/"/>
    
  </entry>
  
</feed>
